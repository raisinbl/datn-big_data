-- DROP TABLE IF EXISTS PHIEU_GUI CASCADE;
CREATE TABLE IF NOT EXISTS PHIEU_GUI
(
    MA_PHIEUGUI     VARCHAR(15) PRIMARY KEY,
    MA_BUUCUC_GOC   VARCHAR(50),
    MA_BUUCUC_PHAT  VARCHAR(50),
    NGAY_GUI_BP     TIMESTAMP,
    TONG_CUOC_VND   FLOAT,
    NGAY_NHAP_MAY   TIMESTAMP,
    TRONG_LUONG     FLOAT,
    THU_HO          FLOAT,
    MA_LOAI_HANGHOA VARCHAR(2),
    NGAY_GUI_DATE   DATE,
    UPDATED_AT      TIMESTAMP
);
CREATE INDEX IF NOT EXISTS PHIEUGUI_IDX01 ON PHIEU_GUI (NGAY_GUI_DATE);
CREATE  INDEX IF NOT EXISTS PHIEUGUI_IDX02 ON PHIEU_GUI (NGAY_GUI_DATE, MA_BUUCUC_GOC);
-- sinh NGAY_GUI_DATE từ NGAY_GUI_BP
CREATE OR REPLACE FUNCTION trg_update_ngay_gui_date()
    RETURNS TRIGGER AS $$
BEGIN
    -- Gán giá trị cho NGAY_GUI_DATE dựa trên NGAY_GUI_BP
    IF NEW.NGAY_GUI_BP IS NOT NULL THEN
        NEW.NGAY_GUI_DATE := NEW.NGAY_GUI_BP::DATE;
    END IF;
    -- Trả về bản ghi sau khi xử lý
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
CREATE TRIGGER trg_update_ngay_gui_date
    BEFORE INSERT OR UPDATE ON PHIEU_GUI
    FOR EACH ROW
EXECUTE FUNCTION trg_update_ngay_gui_date();
;
-- UPDATED_AT TRIGGER
CREATE OR REPLACE FUNCTION update_updated_at()
    RETURNS TRIGGER AS $$
BEGIN
    -- Cập nhật cột updated_at thành thời gian hiện tại
    NEW.updated_at := NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
CREATE TRIGGER trg_update_updated_at
    BEFORE INSERT OR UPDATE ON PHIEU_GUI
    FOR EACH ROW
EXECUTE FUNCTION update_updated_at();